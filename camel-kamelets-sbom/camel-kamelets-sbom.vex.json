{
  "bomFormat" : "CycloneDX",
  "specVersion" : "1.5",
  "serialNumber" : "urn:uuid:37178f3d-7d85-437a-889f-1430b4c23709",
  "version" : 1,
  "metadata" : {
    "timestamp" : "2024-07-09T08:11:09Z",
    "tools" : [
      {
        "vendor" : "OWASP",
        "name" : "Dependency-Track",
        "version" : "4.10.1"
      }
    ],
    "component" : {
      "name" : "Camel-Kamelets",
      "version" : "4",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "https://camel.apache.org/camel-kamelets-parent"
        },
        {
          "type" : "distribution-intake",
          "url" : "https://repository.apache.org/service/local/staging/deploy/maven2"
        },
        {
          "type" : "issue-tracker",
          "url" : "https://github.com/apache/camel-kamelets/issues"
        },
        {
          "type" : "mailing-list",
          "url" : "dev-subscribe@camel.apache.org"
        },
        {
          "type" : "vcs",
          "url" : "https://gitbox.apache.org/repos/asf?p=camel-kamelets.git;a=summary"
        }
      ],
      "type" : "library",
      "bom-ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
    }
  },
  "vulnerabilities" : [
    {
      "bom-ref" : "8dff54f3-1260-4b15-bdee-f9f1d0bf1b49",
      "id" : "SNYK-JAVA-ORGCODEHAUSJACKSON-3038425",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "## Overview [org.codehaus.jackson:jackson-mapper-asl](https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl) is a high-performance data binding package built on Jackson JSON processor. Affected versions of this package are vulnerable to Denial of Service (DoS) in the `_deserializeFromArray()` function in `BeanDeserializer`, due to resource exhaustion when processing a deeply nested array. **NOTE:** For this vulnerability to be exploitable the non-default `DeserializationFeature` must be enabled. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation There is no fixed version for `org.codehaus.jackson:jackson-mapper-asl`. ## References - [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50490) - [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/063183589218fec19a9293ed2f17ec53ea80ba88) - [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea) - [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3582)",
      "created" : "2022-10-02T09:21:18Z",
      "updated" : "2023-11-08T09:43:38Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "74c3d734-0837-4a8b-bc62-ebdbd7b09d05",
      "id" : "SNYK-JAVA-ORGCODEHAUSJACKSON-3038427",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        400
      ],
      "description" : "## Overview [org.codehaus.jackson:jackson-mapper-asl](https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl) is a high-performance data binding package built on Jackson JSON processor. Affected versions of this package are vulnerable to Denial of Service (DoS) in the `_deserializeWrappedValue()` function in `StdDeserializer.java`, due to resource exhaustion when processing deeply nested arrays. **NOTE:** This vulnerability is only exploitable when the non-default `UNWRAP_SINGLE_VALUE_ARRAYS` feature is enabled. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation There is no fixed version for `org.codehaus.jackson:jackson-mapper-asl`. ## References - [Chromium Bugs](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51020) - [Documentation](https://fasterxml.github.io/jackson-databind/javadoc/2.9/com/fasterxml/jackson/databind/DeserializationFeature.html#UNWRAP_SINGLE_VALUE_ARRAYS) - [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/2c4a601c626f7790cad9d3c322d244e182838288) - [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea) - [GitHub Commit](https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33) - [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/3590)",
      "created" : "2022-10-02T09:41:44Z",
      "updated" : "2023-11-08T09:43:38Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "1ce85ff3-bc60-44fe-963e-b452fffc97c4",
      "id" : "SNYK-JAVA-ORGCODEHAUSJACKSON-534878",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
        }
      ],
      "description" : "## Overview [org.codehaus.jackson:jackson-mapper-asl](https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl) is a high-performance data binding package built on Jackson JSON processor. Affected versions of this package are vulnerable to XML External Entity (XXE) Injection. via the `DOMDeserializer.class` file and its inner classes (`DocumentDeserializer.class` and `NodeDeserializer.class`) that uses the `_parserFactory` instance without restricting it from processing external `XML` entities when parsing user input. ## Details XXE Injection is a type of attack against an application that parses XML input. XML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document. Attacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier. For example, below is a sample XML document, containing an XML element- username. ```xml <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <username>John</username> </xml> ``` An external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of `/etc/passwd` and display it to the user rendered by `username`. ```xml <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]> <username>&xxe;</username> </xml> ``` Other XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service. ## Remediation There is no fixed version for `org.codehaus.jackson:jackson-mapper-asl`. For `org.codehaus.jackson:jackson-all` releases supporting `jackson-mapper-asl`. As a workaround, for 1.9.X release, the `javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING` setting can be enabled. For 2.x releases, the `\"javax.xml.stream.isSupportingExternalEntities` setting can be set to `FALSE`. ## References - [CVE-2019-10172 Remediation for Jackson Databind](https://github.com/FasterXML/jackson-databind/issues/2547) - [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1715075) - [StackOverflow CVE-2016-3720 Remediation - jackson-all](https://stackoverflow.com/questions/38017676/small-fix-for-cve-2016-3720-with-older-versions-of-jackson-all-1-9-11-and-in-ja)",
      "recommendation" : "Upgrade the package version to to fix this vulnerability",
      "created" : "2019-11-19T11:44:30Z",
      "published" : "2019-11-19T11:56:32Z",
      "updated" : "2024-03-11T09:54:00Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "5cfc8ca5-3e9b-4643-b175-012724d716ed",
      "id" : "SNYK-JAVA-ORGCODEHAUSJACKSON-3326362",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "description" : "## Overview [org.codehaus.jackson:jackson-mapper-asl](https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl) is a high-performance data binding package built on Jackson JSON processor. Affected versions of this package are vulnerable to Improper Input Validation which results in several instances of deserialization of untrusted data. This issue is parallel to vulnerabilities reported and fixed in jackson-databind (CVE-2017-17485, CVE-2017-7525, CVE-2017-15095, CVE-2018-5968, CVE-2018-7489, CVE-2018-1000873, CVE-2019-12086). Although no fix is available for codehaus, this vulnerability can be remediated by using a fixed version of jackson-databind. ## Remediation There is no fixed version for `org.codehaus.jackson:jackson-mapper-asl`. ## References - [Apache Security Advisory](https://lists.apache.org/thread.html/r500867b74f42230a3d65b8aec31fc93ac390eeae737c91a759ab94cb@%3Cissues.hive.apache.org%3E) - [Apache Security Advisory](https://lists.apache.org/thread.html/refea6018a2c4e9eb7838cab567ed219c3f726dcd83a5472fbb80d8d9@%3Cissues.flume.apache.org%3E) - [GitHub Issue](https://github.com/FasterXML/jackson-databind/issues/2700)",
      "recommendation" : "Upgrade the package version to to fix this vulnerability",
      "created" : "2023-02-21T07:30:54Z",
      "published" : "2023-03-01T08:47:56Z",
      "updated" : "2024-03-11T09:54:00Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "ef05c048-e001-4375-8306-9eecce182cfc",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-1316638",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Denial of Service (DoS). When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out-of-memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.21 or higher. ## References - [Apache Security Advisory](https://commons.apache.org/proper/commons-compress/security-reports.html) - [Apache Security Advisory](https://lists.apache.org/thread.html/rf68442d67eb166f4b6cf0bbbe6c7f99098c12954f37332073c9822ca%40%3Cuser.commons.apache.org%3E) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=0aba8b8fd8053ae323f15d736d1762b2161c76a6) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=26924e96c7730db014c310757e11c9359db07f3e) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=5761493cbaf7a7d608a3b68f4d61aaa822dbeb4f) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=60d551a748236d7f4651a4ae88d5a351f7c5754b) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=ae2b27cc011f47f0289cb24a11f2d4f1db711f8a) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=bf5a5346ae04b9d2a5b0356ca75f11dcc8d94789) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=c51de6cfaec75b21566374158f25e1734c3a94cb) - [GitHub Commit](https://github.com/apache/commons-compress/commit/26924e96c7730db014c310757e11c9359db07f3e) - [Jira Issue](https://issues.apache.org/jira/browse/COMPRESS-542)",
      "recommendation" : "Upgrade the package version to 1.21 to fix this vulnerability",
      "created" : "2021-07-13T11:27:28Z",
      "published" : "2021-07-13T15:29:21Z",
      "updated" : "2024-03-11T09:53:57Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "557ace8c-3ba0-4b34-b3bd-7475ecb0de6a",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-1316639",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Denial of Service (DoS). When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.21 or higher. ## References - [Apache Security Advisory](https://commons.apache.org/proper/commons-compress/security-reports.html) - [Apache Security Advisory](https://lists.apache.org/thread.html/r19ebfd71770ec0617a9ea180e321ef927b3fefb4c81ec5d1902d20ab%40%3Cuser.commons.apache.org%3E) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=3fe6b42110dc56d0d6fe0aaf80cfecb8feea5321)",
      "recommendation" : "Upgrade the package version to 1.21 to fix this vulnerability",
      "created" : "2021-07-13T11:33:38Z",
      "published" : "2021-07-13T15:29:20Z",
      "updated" : "2024-03-11T09:53:53Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "fb8cad05-1fe6-4f5f-aa40-a4835cfe597a",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-1316640",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Denial of Service (DoS). When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out-of-memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.21 or higher. ## References - [Apache Security Advisory](https://commons.apache.org/proper/commons-compress/security-reports.html) - [Apache Security Advisory](https://lists.apache.org/thread.html/r605d906b710b95f1bbe0036a53ac6968f667f2c249b6fbabada9a940%40%3Cuser.commons.apache.org%3E) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=7ce1b0796d6cbe1f41b969583bd49f33ae0efef0) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=d0af873e77d16f41edfef7b69da5c8c35c96a650)",
      "recommendation" : "Upgrade the package version to 1.21 to fix this vulnerability",
      "created" : "2021-07-13T11:35:27Z",
      "published" : "2021-07-13T15:29:20Z",
      "updated" : "2024-03-11T09:53:51Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "f8de35b3-546f-4ad9-99c0-9cfb6bb26ae1",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-1316641",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Denial of Service (DoS). When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out-of-memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.21 or higher. ## References - [Apache Security Advisory](https://commons.apache.org/proper/commons-compress/security-reports.html) - [Apache Security Advisory](https://lists.apache.org/thread.html/rc4134026d7d7b053d4f9f2205531122732405012c8804fd850a9b26f%40%3Cuser.commons.apache.org%3E) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=80124dd9fe4b0a0b2e203ca19aacac8cd0afc96f) - [Git Commit](https://gitbox.apache.org/repos/asf?p=commons-compress.git;a=commit;h=ef5d70b625000e38404194aaab311b771c44efda)",
      "recommendation" : "Upgrade the package version to 1.21 to fix this vulnerability",
      "created" : "2021-07-13T11:39:11Z",
      "published" : "2021-07-13T15:29:20Z",
      "updated" : "2024-03-11T09:53:57Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "6f944446-3332-440c-9eb2-967f6f500727",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-6254296",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Infinite loop due to the improper handling of certain inputs during the parsing of dump files. An attacker can cause the application to enter an infinite loop by supplying crafted inputs. ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.26.0 or higher. ## References - [Apache Lists](https://lists.apache.org/thread/cz8qkcwphy4cx8gltn932ln51cbtq6kf) - [GitHub Commit](https://github.com/apache/commons-compress/commit/8a9a5847c04ae39a1d45b365f8bb82022466067d)",
      "recommendation" : "Upgrade the package version to 1.26.0 to fix this vulnerability",
      "created" : "2024-02-20T10:52:07Z",
      "published" : "2024-02-20T10:52:07Z",
      "updated" : "2024-04-27T13:35:10Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "40cee64e-b16b-464a-a368-253adeac0cf7",
      "id" : "SNYK-JAVA-COMSQUAREUPOKHTTP3-2958044",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
        }
      ],
      "description" : "## Overview [com.squareup.okhttp3:okhttp](https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp) is a HTTP & HTTP/2 client for Android and Java applications Affected versions of this package are vulnerable to Information Exposure. When there's an illegal character in a header value, an `IllegalArgumentException` is thrown whose message includes the full header value. ## PoC ``` package com.launchdarkly.eventsource; import okhttp3.*; import org.junit.Test; import static org.hamcrest.MatcherAssert.*; import static org.hamcrest.Matchers.*; public class OkhttpHeaderExceptionTest { @Test public void invalidHeaderValueIsCapturedInException() throws Exception { String password = \"very-secret-password\"; String badValue = password + \"\\n\"; try { Request req = new Request.Builder().url(\"http://github.com/path/doesnt/matter\") .header(\"Authorization\", badValue) .build(); } catch (IllegalArgumentException e) { assertThat(e.getMessage(), not(containsString(password))); } } } ``` ## Remediation Upgrade `com.squareup.okhttp3:okhttp` to version 4.9.2 or higher. ## References - [GitHub Commit](https://github.com/square/okhttp/commit/1fd7c0afdc2cee9ba982b07d49662af7f60e1518) - [GitHub Issue](https://github.com/square/okhttp/issues/6738) - [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2169845)",
      "recommendation" : "Upgrade the package version to 4.9.2 to fix this vulnerability",
      "created" : "2022-07-22T06:59:36Z",
      "published" : "2022-07-22T06:59:36Z",
      "updated" : "2024-03-11T09:53:38Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "85b4750f-b399-4e42-bc2d-abd7be2c4a71",
      "id" : "SNYK-JAVA-COMSQUAREUPOKIO-5773320",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview Affected versions of this package are vulnerable to Denial of Service (DoS) due to improper exception handling by the `GzipSource` class when parsing a malformed gzip buffer. This vulnerability can be exploited on the Okio client when handling a crafted GZIP archive. ## PoC ```java val gzBuf: Buffer = Buffer() try { val gzByteString: ByteString = (\"1f8b41ff424242424343ffff\").decodeHex() gzBuf.write(gzByteString) val gz: GzipSource = GzipSource(gzBuf) val sinkBuf: Buffer = Buffer() gz.read(sinkBuf, 5) } catch(e: IOException) { println(\"got error: \" + e.toString()) } ``` ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users. Unlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime. One popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines. When it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries. Two common types of DoS vulnerabilities: * High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082). * Crash - An attacker sending crafted requests that could cause the system to crash. For Example, [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108) ## Remediation Upgrade `com.squareup.okio:okio` to version 1.17.6, 3.4.0 or higher. ## References - [GitHub Commit](https://github.com/square/okio/commit/81bce1a30af244550b0324597720e4799281da7b) - [GitHub Commit](https://github.com/square/okio/commit/b4fa875dc24950680c386e4b1c593660ce4f7839) - [GitHub Issue](https://github.com/square/okio/issues/1350) - [GitHub PR](https://github.com/square/okio/pull/1280)",
      "recommendation" : "Upgrade the package version to 1.17.6,3.4.0 to fix this vulnerability",
      "created" : "2023-07-13T08:54:58Z",
      "published" : "2023-07-13T09:04:26Z",
      "updated" : "2024-04-08T08:36:20Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "f7d6d98d-008b-4bf9-8b2c-b0f193b30a39",
      "id" : "SNYK-JAVA-ORGAPACHEAVRO-5926693",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.avro:avro](https://avro.apache.org/) is an Avro core components Affected versions of this package are vulnerable to Improper Input Validation when deserializing untrusted or corrupted data. An attacker can consume memory beyond the allowed constraints, resulting in the system being out of memory. ## Remediation Upgrade `org.apache.avro:avro` to version 1.11.3 or higher. ## References - [Apache List](https://lists.apache.org/thread/q142wj99cwdd0jo5lvdoxzoymlqyjdds) - [GitHub Commit](https://github.com/apache/avro/commit/a12a7e44ddbe060c3dc731863cad5c15f9267828) - [OSS Security Advisory](http://www.openwall.com/lists/oss-security/2023/09/29/6)",
      "recommendation" : "Upgrade the package version to 1.11.3 to fix this vulnerability",
      "created" : "2023-10-01T10:48:46Z",
      "published" : "2023-10-01T11:21:06Z",
      "updated" : "2024-03-11T09:54:02Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "54bb58b0-d5ec-47bf-a2b2-4301f1c1bbf3",
      "id" : "SNYK-JAVA-ORGAPACHECOMMONS-32473",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "## Overview [org.apache.commons:commons-compress](https://github.com/apache/commons-compress) is an API for working with compression and archive formats. Affected versions of this package are vulnerable to Denial of Service (DoS). When reading a specially crafted ZIP archive, the read method might fail to return the correct `EOF` indication after the end of the stream has been reached. If it combined with a `java.io.InputStreamReader`, it can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package. ## Details Denial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process. The Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down. Let’s take the following regular expression as an example: ```js regex = /A(B|C+)+D/ ``` This regular expression accomplishes the following: - `A` The string must start with the letter 'A' - `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section. - `D` Finally, we ensure this section of the string ends with a 'D' The expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD` It most cases, it doesn't take very long for a regex engine to find a match: ```bash $ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")' 0.04s user 0.01s system 95% cpu 0.052 total $ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")' 1.79s user 0.02s system 99% cpu 1.812 total ``` The entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated. Most Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_. Let's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's: 1. CCC 2. CC+C 3. C+CC 4. C+C+C. The engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match. From there, the number of steps the engine must use to validate a string just continues to grow. | String | Number of C's | Number of steps | | -------|-------------:| -----:| | ACCCX | 3 | 38 | ACCCCX | 4 | 71 | ACCCCCX | 5 | 136 | ACCCCCCCCCCCCCCX | 14 | 65,553 By the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service. ## Remediation Upgrade `org.apache.commons:commons-compress` to version 1.18-RC1 or higher. ## References - [Apache Security Advisory](https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E) - [GitHub Commit](https://github.com/apache/commons-compress/commit/a41ce6892cb0590b2e658704434ac0dbcb6834c8)",
      "recommendation" : "Upgrade the package version to 1.18-RC1 to fix this vulnerability",
      "created" : "2018-08-16T14:26:43Z",
      "published" : "2018-08-19T13:36:14Z",
      "updated" : "2024-03-11T09:48:50Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    },
    {
      "bom-ref" : "d8dd9c4f-d279-4c67-996c-10c28a29895f",
      "id" : "SNYK-JAVA-IONETTY-1042268",
      "source" : {
        "name" : "SNYK"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "SNYK"
          },
          "score" : 7.4,
          "severity" : "high",
          "method" : "CVSSv31",
          "vector" : "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
        }
      ],
      "cwes" : [
        295
      ],
      "description" : "## Overview [io.netty:netty-handler](https://github.com/netty/netty.git/netty-handler) is a library that provides an asynchronous event-driven network application framework and tools for rapid development of maintainable high performance and high scalability protocol servers and clients. In other words, Netty is a NIO client server framework which enables quick and easy development of network applications such as protocol servers and clients. It greatly simplifies and streamlines network programming such as TCP and UDP socket server. Affected versions of this package are vulnerable to Improper Certificate Validation. Certificate hostname validation is disabled by default in `Netty 4.1.x` which makes it potentially susceptible to Man-in-the-Middle attacks. ## Remediation There is no fixed version for `io.netty:netty-handler`. ## References - [GitHub Issue 1](https://github.com/netty/netty/issues/10806) - [GitHub Issue 2](https://github.com/netty/netty/issues/8537) - [GitHub Issue 3](https://github.com/netty/netty/issues/9930) - [GitHub Issue 4](https://github.com/netty/netty/issues/10362) - [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2235564)",
      "created" : "2020-11-20T15:44:58Z",
      "updated" : "2023-10-11T01:10:45Z",
      "affects" : [
        {
          "ref" : "147d79ce-9c2a-498d-b1cb-11029d7fc641"
        }
      ]
    }
  ]
}