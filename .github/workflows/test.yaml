# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  push:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CAMEL_K_VERSION: 1.5.0
  YAKS_VERSION: 0.5.0-202107130015

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Kubernetes KinD Cluster
      uses: container-tools/kind-action@v1
    - name: Info
      run: |
        kubectl cluster-info
        kubectl describe nodes

    #
    #  Camel K
    #
    - name: Get camel-k CLI
      env:
        CAMEL_K_ULR: https://github.com/apache/camel-k/releases/download/v${{ env.CAMEL_K_VERSION }}/camel-k-client-${{ env.CAMEL_K_VERSION }}-linux-64bit.tar.gz
      run: |
        echo "Downloading camel-k from ${CAMEL_K_ULR}"
        mkdir -p _bin

        curl --fail --location --silent ${CAMEL_K_ULR} | tar -zxf - --directory ./_bin
        chmod u+x ./_bin/kamel

        sudo mv ./_bin/kamel /usr/local/bin/
        rm -r _bin

    - name: Install kamel-k
      run: |
        echo "Configuring Camel K"

        # Configure install options
        export KAMEL_INSTALL_BUILD_PUBLISH_STRATEGY=Spectrum
        export KAMEL_INSTALL_REGISTRY=$KIND_REGISTRY
        export KAMEL_INSTALL_REGISTRY_INSECURE=true

        kamel install --cluster-setup

    #
    #  YAKS
    #
    - name: Get yaks CLI
      env:
        YAKS_URL: https://github.com/citrusframework/yaks/releases/download/${{ env.YAKS_VERSION }}/yaks-${{ env.YAKS_VERSION }}-linux-64bit.tar.gz
      run: |
        echo "Downloading YAKS from ${YAKS_URL}"
        mkdir -p _bin

        curl --fail --location --silent ${YAKS_URL} | tar -zxf - --directory ./_bin
        chmod u+x ./_bin/yaks

        sudo mv ./_bin/yaks /usr/local/bin/
        rm -r _bin

    - name: Install yaks
      run: |
        # Configure install options
        export KAMEL_INSTALL_BUILD_PUBLISH_STRATEGY=Spectrum
        export KAMEL_INSTALL_REGISTRY=$KIND_REGISTRY
        export KAMEL_INSTALL_REGISTRY_INSECURE=true

        echo "Configuring Yaks"
        yaks install

    - name: Run Tests
      run: |
        # Configure install options
        export KAMEL_INSTALL_BUILD_PUBLISH_STRATEGY=Spectrum
        export KAMEL_INSTALL_REGISTRY=$KIND_REGISTRY
        export KAMEL_INSTALL_REGISTRY_INSECURE=true

        echo "Running tests"
        yaks run --logs --wait ./test

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: dumps
        path: /tmp/dumps/*.log
