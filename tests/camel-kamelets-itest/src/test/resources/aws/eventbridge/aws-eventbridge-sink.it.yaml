# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: aws-eventbridge-sink-test
variables:
  - name: "maxRetryAttempts"
    value: "20"
  - name: "aws.sqs.queueName"
    value: "event-queue"
  - name: "aws.eventbridge.eventbusName"
    value: "default"
  - name: "aws.eventbridge.resourcesArn"
    value: "arn:aws:s3:us-east-1:000000000000:my-bucket"
  - name: "aws.eventbridge.eventSource"
    value: "aws.s3"
  - name: "aws.eventbridge.eventSourcePrefix"
    value: "kamelet-connect."
  - name: "aws.eventbridge.detailType"
    value: "Object Created"
  - name: "aws.eventbridge.json.data"
    value: |
      { \"message\": \"Hello AWS EventBridge!\" }
  - name: "timer.source.period"
    value: "10000"
actions:
  # Create LocalStack infrastructure
  - testcontainers:
      start:
        localstack:
          services:
            - "SQS"
            - "EVENT_BRIDGE"

  - waitFor:
      http:
        url: "${CITRUS_TESTCONTAINERS_LOCALSTACK_SERVICE_URL}"

  # Create AWS EventBridge and SQS queue
  - groovy:
      script:
        file: "aws/eventbridge/setupEventBridge.groovy"

  # Create Camel JBang integration
  - camel:
      jbang:
        run:
          integration:
            file: "aws/eventbridge/aws-eventbridge-sink-pipe.yaml"
            systemProperties:
              properties:
                - name: "timer.source.period"
                  value: "${timer.source.period}"
                - name: "aws.eventbridge.json.data"
                  value: "${aws.eventbridge.json.data}"
              file: "aws/eventbridge/application.properties"

  # Create event listener
  - camel:
      jbang:
        run:
          integration:
            file: "aws/eventbridge/aws-sqs-event-listener-pipe.yaml"
            systemProperties:
              properties:
                - name: "aws.sqs.queueName"
                  value: "${aws.sqs.queueName}"
              file: "aws/eventbridge/application.properties"

  # Verify event received
  - camel:
      jbang:
        verify:
          integration: "aws-sqs-event-listener-pipe"
          logMessage: |
            "detail":{"message":"Hello AWS EventBridge!"}
